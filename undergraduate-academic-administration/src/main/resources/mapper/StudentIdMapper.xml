<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fjxgwzd.undergraduateacademicadministration.mapper.StudentIdMapper">
    <select id="getEducationPlanByMajorId" resultType="com.fjxgwzd.undergraduateacademicadministration.vo.EducationPlanVO">
        SELECT
            mj.name AS majorName,
            mdm.cohort_year AS time,
            af.id AS aaoOfficeId,
            af.name AS aaoOfficeName,
            sc.id AS schoolId,
            sc.name AS schoolName,
            mdm.degree_awarded AS degreeName,
            mdm.standard_duration_year AS duration,
            mdm.max_duration AS maxDuration,
            mdm.min_duration AS minDuration,
            mdm.intro AS description,
            mdm.target,
            mdm.req,
            GROUP_CONCAT(DISTINCT ccf.course_struct_id SEPARATOR ',') AS coreCourseIds,
            GROUP_CONCAT(DISTINCT cs.course_name SEPARATOR ',') AS courseNames,
            GROUP_CONCAT(DISTINCT mcr.credit_type SEPARATOR ',') AS creditReqNames,
            GROUP_CONCAT(DISTINCT mcr.credit_total SEPARATOR ',') AS creditReqTotals
        FROM
            major mj
        JOIN
            major_dev_manage mdm ON mdm.major_id = mj.id
        JOIN
            aao_office af ON af.major_id = mj.id
        JOIN
            core_course_for_major ccf ON mj.id = ccf.major_id AND ccf.cohort_year = #{cohortYear}
        JOIN
            major_credit_req mcr ON mj.id = mcr.major_id
        JOIN
            school sc ON mj.school_id = sc.id
        JOIN
            course_struct cs ON cs.id = ccf.course_struct_id AND cs.cohort_year = #{cohortYear} AND cs.for_major = #{majorId}
        WHERE
            mj.id = #{majorId}
        GROUP BY
            mj.name,
            mdm.cohort_year,
            af.id,
            af.name,
            sc.id,
            sc.name,
            mdm.degree_awarded,
            mdm.standard_duration_year,
            mdm.max_duration,
            mdm.min_duration,
            mdm.intro,
            mdm.target,
            mdm.req
    </select>
    <select id="findCourseInstByStudentId">
        SELECT
            ci.id AS courseInstId,
            cis.id AS "courseInstSection.courseInstSectionId",
            cis.name AS "courseInstSection.courseInstSectionName",
            c.name,
            c.course_type AS courseType,
            c.course_cate AS courseCate,
            c.course_for AS courseFor,
            c.credit,
            c.grade_level AS gradeLevel,
            c.school_id AS schoolId,
            sc.name AS schoolName,
            f.url AS coursePic,
            ci.year,
            ci.term_part AS termPart,
            ci.total_class_hour AS totalClassHour
        FROM course_inst ci
        JOIN course c ON c.id = ci.course_id
        JOIN course_inst_section cis ON cis.course_inst_id = ci.id
        JOIN course_selection cs ON cs.course_sec_id = cis.id
        JOIN school sc ON sc.id = c.school_id
        JOIN file f ON f.id = c.course_pic
        WHERE cs.stu_id = #{studentId} AND ci.year = #{year} AND ci.term_part = #{termPart}
    </select>
    <select id="getStudentDetailInfoByStudentId">
        SELECT f.url AS picUrl,
               st.name,
               st.gender,
               st.id AS stuId,
               st.phone_number AS phoneNumber,
               st.major_id AS majorId,
               mj.name AS majorName,
               st.birthday,
               st.address,
               sc.id AS schoolId,
               sc.name AS schoolName,
               st.now_level AS gradeLevel,
               st.identity
        FROM student st
        JOIN major mj ON mj.id = st.major_id
        JOIN school sc ON mj.school_id = sc.id
        JOIN file f ON f.id = st.stu_pic
        WHERE st.id = #{studentId}
    </select>

    <select id="getCourseTaskByStudentId">
        SELECT cis.id AS courseInstSectionId,
               ci.id AS courseInstId,
               c.name AS courseName,
               GROUP_CONCAT(ter.name SEPARATOR ',') AS courseTeacherName,
               cr.room_number AS classroomName,
               cs.day_of_week AS dayOfWeek,
               cs.period_from AS periodFrom,
               cs.period_to AS periodTo
        FROM course_inst_section cis
        JOIN course_inst ci ON cis.course_inst_id = ci.id
        JOIN course c ON c.id = ci.course_id
        JOIN teach t ON t.course_id = ci.course_id
        JOIN teacher ter ON ter.id = t.teacher_id
        JOIN course_sched cs ON cs.course_section_id = cis.id
        JOIN classroom cr ON cr.id = cs.classroom_id
        JOIN course_selection sc ON sc.course_sec_id = cis.id
        WHERE sc.stu_id = #{studentId} AND cs.year = #{year} AND cs.term_part = #{termPart} AND cs.week = #{week}
        GROUP BY
            cis.id,
            ci.id,
            c.name,
            cr.room_number,
            cs.day_of_week,
            cs.period_from,
            cs.period_to
    </select>

    <select id="getAllSemester">
        SELECT *
        FROM semester
        ORDER BY to_date DESC
    </select>

    <select id="getTotalStudentDetail">
        SELECT f.url AS picUrl,
               s.name,
               s.gender,
               s.id AS stuId,
               s.phone_number AS phoneNumber,
               s.major_id AS majorId,
               mj.name AS majorName,
               s.birthday,
               s.address,
               mj.school_id AS schoolId,
               sc.name AS schoolName,
               s.now_level AS gradeLevel,
               s.identity
            FROM student s
            JOIN file f ON f.id = s.stu_pic
            JOIN major mj ON mj.id = s.major_id
            JOIN school sc ON sc.id = mj.school_id
            JOIN class c ON c.id = s.class_id
            WHERE (#{schoolId} IS NULL OR sc.id = #{schoolId})
              AND (#{majorId} IS NULL OR s.major_id = #{majorId})
              AND (#{startYear} IS NULL OR c.start_year = #{startYear})
              AND (#{classId} IS NULL OR c.id = #{classId})
              AND (#{gender} IS NULL OR s.gender = #{gender})
              AND (#{name} IS NULL OR s.name = #{name})
            ORDER BY s.id
            LIMIT #{offset}, #{num}
    </select>

    <select id="getSum">
        SELECT COUNT(*)
            FROM student s
            JOIN file f ON f.id = s.stu_pic
            JOIN major mj ON mj.id = s.major_id
            JOIN school sc ON sc.id = mj.school_id
            JOIN class c ON c.id = s.class_id
            WHERE (#{schoolId} IS NULL OR sc.id = #{schoolId})
              AND (#{majorId} IS NULL OR s.major_id = #{majorId})
              AND (#{startYear} IS NULL OR c.start_year = #{startYear})
              AND (#{classId} IS NULL OR c.id = #{classId})
              AND (#{gender} IS NULL OR s.gender = #{gender})
              AND (#{name} IS NULL OR s.name = #{name})
    </select>

    <select id="getCourseStudent">
        SELECT cs.stu_id AS stuID,
               sc.name AS stuName,
               mj.name AS majorName
        FROM course_selection cs
        JOIN student sc ON sc.id = cs.stu_id
        JOIN major mj ON mj.id = sc.major_id
        JOIN course_inst_section cis ON cis.id = cs.course_sec_id
        WHERE cis.course_inst_id = #{courseInstId}
        ORDER BY sc.id DESC
        LIMIT #{offset}, #{num}
    </select>
    <select id="getStudentSum">
        SELECT COUNT(*)
        FROM course_selection cs
        JOIN student sc ON sc.id = cs.stu_id
        JOIN major mj ON mj.id = sc.major_id
        JOIN course_inst_section cis ON cis.id = cs.course_sec_id
        WHERE cis.course_inst_id = #{courseInstId}
    </select>
</mapper>